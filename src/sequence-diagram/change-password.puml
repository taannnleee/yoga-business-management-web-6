@startuml
title Đổi mật khẩu (có lifeline đầy đủ)

actor Actor
boundary ChangePasswordPage
control AuthenticationController
entity AuthenticationService
entity JwtUtil
entity passwordEncoder
entity User
entity UserRepository
database DB

activate ChangePasswordPage
Actor -> ChangePasswordPage : Click "Đổi mật khẩu"
ChangePasswordPage -> AuthenticationController : POST /change-password\n{password, newPassword, confirmNewPassword}
activate AuthenticationController

AuthenticationController -> AuthenticationService : changePassword(request, changePasswordRequest)
activate AuthenticationService

AuthenticationService -> JwtUtil : getUserFromRequest(request)
activate JwtUtil
JwtUtil --> AuthenticationService : return User (or null)
deactivate JwtUtil

alt User == null

    AuthenticationService --> AuthenticationController : throw AppException(USER_NOT_FOUND)
    deactivate AuthenticationService
    AuthenticationController --> ChangePasswordPage : show error USER_NOT_FOUND
    deactivate AuthenticationController
else User != null
    activate AuthenticationService
    AuthenticationService -> passwordEncoder : matches(changePasswordRequest.password, user.password)
    activate passwordEncoder
    passwordEncoder --> AuthenticationService : boolean (true/false)
    deactivate passwordEncoder

    alt password không khớp
        AuthenticationService --> AuthenticationController : throw AppException(PASS_WORD_INCORRECT)
        deactivate AuthenticationService
        activate AuthenticationController
        AuthenticationController --> ChangePasswordPage : show error PASS_WORD_INCORRECT
        deactivate AuthenticationController
    else password đúng
        alt newPassword != confirmNewPassword
            AuthenticationService --> AuthenticationController : throw AppException(PASS_WORD_NOT_MATCHED)
            deactivate AuthenticationService
            activate AuthenticationController
            AuthenticationController --> ChangePasswordPage : show error PASS_WORD_NOT_MATCHED
            deactivate AuthenticationController

        else newPassword == confirmNewPassword
            activate passwordEncoder
            activate AuthenticationService
            AuthenticationService -> passwordEncoder : encode(changePasswordRequest.newPassword)
            passwordEncoder --> AuthenticationService : encryptedPassword
            deactivate passwordEncoder

            AuthenticationService -> User : setPassword(encryptedPassword)
            activate User
            deactivate User

            AuthenticationService -> UserRepository : save(user)
            activate UserRepository
            activate DB
            UserRepository --> DB : UPDATE users SET password = ...
            DB --> UserRepository : update success
            deactivate DB
            UserRepository --> AuthenticationService : save success
            deactivate UserRepository

            AuthenticationService --> AuthenticationController : "Password updated successfully"
            deactivate AuthenticationService
            activate AuthenticationController
            AuthenticationController --> ChangePasswordPage : show success message
            deactivate AuthenticationController
            deactivate ChangePasswordPage
        end
    end
end

@enduml
