@startuml
title Set Default Address

actor Actor
boundary Client
control AddressController
control AddressService
entity JwtUtil
entity User
entity Address
entity AddressRepository
database DB

Actor -> Client : Request POST /set-default/{id}
activate Client
Client -> AddressController : setDefault(id, request)
activate AddressController

AddressController -> AddressService : setDefault(id, request)
activate AddressService

AddressService -> JwtUtil : getUserFromRequest(request)
activate JwtUtil
JwtUtil --> AddressService : User
deactivate JwtUtil

AddressService -> User : getAddresses()
activate User
User --> AddressService : List<Address>
deactivate User

loop Find address by id
    AddressService -> Address : check id match
end

alt Address found
    loop Find current default address
        AddressService -> Address : check if status == DEFAULT
        Address -> Address : setStatus(NOTDEFAULT)
        AddressService -> AddressRepository : save(address)
        activate AddressRepository
        AddressRepository --> DB : UPDATE address
        DB --> AddressRepository : update success
        deactivate AddressRepository
    end

    AddressService -> Address : setStatus(DEFAULT)
    AddressService -> AddressRepository : save(address)
    activate AddressRepository
    AddressRepository --> DB : UPDATE address
    DB --> AddressRepository : update success
    deactivate AddressRepository

    AddressService --> AddressController : AddressResponse
    deactivate AddressService

    AddressController --> Client : Return success
    deactivate AddressController
    deactivate Client
else Address not found
    AddressService --> AddressController : throw AppException(ADDRESS_NOT_FOUND)
    deactivate AddressService
    AddressController --> Client : Return error
    deactivate AddressController
    deactivate Client
end

@enduml
